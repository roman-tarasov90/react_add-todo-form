{"version":3,"sources":["api/users.ts","services/UserService.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","initialTodos","getNewTodoId","Math","max","App","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","setTodos","action","method","onSubmit","event","preventDefault","data","newTodo","currentTodos","addTodo","htmlFor","type","placeholder","value","onChange","target","disabled","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40d18602.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n","import { User } from '../Types/types';\n\nexport const UserInfo = ({ user }: { user: User }) => {\n  const {\n    email, name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../Types/types';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo = ({ todo }: { todo: Todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Types/types';\n\nexport const TodoList = ({ todos }: { todos: Todo[] }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/UserService';\nimport { TodoList } from './components/TodoList';\nimport users from './api/users';\nimport { Todo } from './components/Types/types';\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [todos, setTodos] = useState(initialTodos);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <label className=\"field\" htmlFor=\"post-title\"> Title:  </label>\n        <input\n          id=\"post-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\">User: </label>\n          <select\n            id=\"user-id\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}